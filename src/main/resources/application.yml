variables:
  rsa:
    private-key: classpath:certs/private-key.pem
    public-key: classpath:certs/public-key.pem
  database:
    user: sa
    password: strongpassword!
    url: jdbc:postgresql://localhost:5432/course_online
  jwt:
    access-token-expiration: 30000000
    refresh-token-expiration: 604800000
spring:
  application:
    name: course_online
  flyway:
    locations: classpath:db/migration
    user: ${variables.database.user}
    password: ${variables.database.password}
    url: ${variables.database.url}
    enabled: true

  datasource:
    username: ${variables.database.user}
    password: ${variables.database.password}
    url: ${variables.database.url}
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: validate


#      naming:
#        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    generate-ddl: true
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        enable_lazy_load_no_trans: true
#    open-in-view: false
  mvc:
    problemdetails:
      enabled: true
#  spring:

#  servlet
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
#  spring.servlet.multipart.max-request-size=10MB
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: http://localhost:8081
server:
  port: 8080
  servlet:
    context-path: /api/v1
  tomcat:
    max-swallow-size: -1
